cad3681133fe575fa477ac6c8fc20f49aa446231





"C:\Windows\System32\OpenCL.dll"




Looks like its a bug in the Mingw64 linker.  It works on Mingw32
The work around to make it work is to create a libopencl.a  and place it in the $SDKROOT\lib folder
To make a lib.a fill do
1. On the OpenCL.dll file in $SDKROOT\bin
> gendef OpenCL.dll  
2. Copy the OpenCL.def file to Lib directory
> dlltool -l libopencl.a -d OpenCL.def -k -A
C:\Windows\System32\OpenCL.dll
When you move the generated "OpenCL.def" file to the "Lib directory":

C:\Windows\System32\OpenCL.dll



cd "C:\Windows\system32" 
gendef OpenCL.dll 
move OpenCL.def "C:\Program Files (x86)\ATI Stream\lib\x86_64" 
cd "C:\Program Files (x86)\ATI Stream\lib\x86_64" 
dlltool -l libopencl.a -d OpenCL.def -k -A 
echo "All Done!"


Do you want to do that on windows (eg. msys/msys2) ? If so, here is my way to generate libOpenCL.a (OpenCL.dll import library).
On Win64 System
1. generate .def files
(a) for 64bit
mkdir lib64 
gendef - /c/Windows/system32/OpenCL.dll> lib64/OpenCL.def
2. generate import libraries
(a) for 64bit
x86_64-w64-mingw32-dlltool -l lib64/libOpenCL.a -d lib64/OpenCL.def -A -k



gendef "c:\Windows\System32\OpenCL.dll"
dlltool --as-flags=--64 -m i386:x86-64 -k -l libOpenCL.a -d OpenCL.def
move libOpenCL.a c:\MinGW\lib\





-------------
    if do_vcs "https://github.com/KhronosGroup/OpenCL-Headers.git"; then
        do_uninstall include/CL
        do_install CL/*.h include/CL/
        do_checkIfExist
    fi

	
-----
syspath=$(cygpath -S)
[[ $bits = "32bit" && -d "$syspath/../SysWOW64" ]] && syspath="$syspath/../SysWOW64"
opencldll="$syspath/OpenCL.dll"
if files_exist "$LOCALDESTDIR/bin-video/OpenCL.dll"; then
    opencldll="$LOCALDESTDIR/bin-video/OpenCL.dll"
fi
if [[ $ffmpeg != "no" ]] && enabled opencl && [[ -f "$opencldll" ]]; then
    do_simple_print "${orange}FFmpeg and related apps will depend on OpenCL.dll${reset}"
    do_pacman_remove opencl-headers
    _check=(CL/cl.h)
    if do_vcs "https://github.com/KhronosGroup/OpenCL-Headers.git"; then
        do_uninstall include/CL
        do_install CL/*.h include/CL/
        do_checkIfExist
    fi
    _check=(libOpenCL.a)
    if test_newer installed "$opencldll" "${_check[@]}"; then
        cd_safe "$LOCALBUILDDIR"
        [[ -d opencl ]] && rm -rf opencl
        mkdir -p opencl && cd_safe opencl
        create_build_dir
        gendef "$opencldll" >/dev/null 2>&1
        [[ -f OpenCL.def ]] && dlltool -y libOpenCL.a -d OpenCL.def -k -A
        [[ -f libOpenCL.a ]] && do_install libOpenCL.a
        do_checkIfExist
    fi
else
    do_removeOption --enable-opencl
fi
unset syspath opencldll
----------------------------------


build_opencl() {
rm -fr OpenCL
do_git_checkout https://github.com/KhronosGroup/OpenCL-Headers.git OpenCL
cd OpenCL
mkdir -p $mingw_w64_x86_64_prefix/include/CL
rm -f $mingw_w64_x86_64_prefix/include/CL/*
cp -vf opencl12/CL/*.h $mingw_w64_x86_64_prefix/include/CL/

$mingw_w64_x86_64_prefix/../bin/gendef $(pwd)/../../../patches/OpenCL$bits_target.dll
$mingw_w64_x86_64_prefix/bin/dlltool -l libOpenCL.a -d OpenCL$bits_target.def -k -A

cp -vf libOpenCL.a $mingw_w64_x86_64_prefix/lib
cd ..
}


-------------------------------------------------------------------------------------------
# always re-downlod a fresh copy of the DLL in case it's changed upstream
curl -4 "https://github.com/hydra3333/h3333_python_cross_compile_script_v100/blob/master/sources/OpenCL.dll?raw=true" --retry 50 -L -O --fail

${mingw_bin_path}/gendef OpenCL.dll || exit 1 
${cross_prefix}dlltool -l libOpenCL.a -d OpenCL.def -k -A


https://github.com/hydra3333/h3333_python_cross_compile_script_v100/blob/master/sources/OpenCL.dll?raw=true



------------------------------

build_OpenCL_v12() {
echo "---------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------"
echo "build_OpenCL_v12 \"${1}\""
echo "---------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------"
+   # assume we're already in the correct subfolder ...
+	# and that parameter 1 is either 32 or 64
+	local oclbits="$1"
+    if [[ "$oclbits" = "" ]]; then
+	   oclbits=$bits_target
+	fi
+	echo "Doing OpenCL stuff it for bits $oclbits"
+	pwd
+	echo "We assume that the 32 bit dll c:\Windows\syswow64\OpenCL.dll has been PRE-copied into ffmpeg-windows-build-helpers-withOpenCL-master/openclx32/OpenCL.dll (name case sensitive)"
+    echo "We assume that the 64 bit dll c:\Windows\System32\OpenCL.dll has been PRE-copied into ffmpeg-windows-build-helpers-withOpenCL-master/openclx64/OpenCL.dll (name case sensitive)"
+    pwd
+    echo "$path"
+    #read -p "Press Enter to continue... or control-C if the pwd is not the sandbox folder"
+    if [[ ! -f ../../openclx${oclbits}/OpenCL.dll ]]; then
+       echo "********** File ../../openclx${oclbits}/OpenCL.dll is not available ... downloading it ..."
+       mkdir -v ../../openclx${oclbits} 
+       echo "Downloading a default ${oclbits} bit OpenCL.dll compatible with KHRONOS OpenCL v1.2 "
+       curl -4 -H 'Pragma: no-cache' -H 'Cache-Control: no-cache' -H 'Cache-Control: max-age=0' -L https://github.com/hydra3333/ffmpeg-windows-build-helpers-withOpenCL/blob/master/openclx${oclbits}/OpenCL.dll?raw=true --create-dirs --output ../../openclx${oclbits}/OpenCL.dll --fail || exit 1
+       #read -p "********** just downloaded a new copy of ${oclbits}bit OpenCL.dll from git repository"
+    fi
+    mkdir -v -m a=rwx ./openclx${oclbits} 
+    cp -fv ../../openclx${oclbits}/* ./openclx${oclbits} || exit 1 
+    cd openclx${oclbits} || exit 1 
+    echo ""
+    #echo "${cross_prefix}gendef OpenCL.dll ...gendef was compiled when building mingw"
+    #${cross_prefix}gendef OpenCL.dll
+	#${mingw_bin_path}gendef OpenCL.dll
+    echo "${mingw_bin_path}gendef OpenCL.dll ...gendef was compiled when building mingw"
+    ${mingw_bin_path}/gendef OpenCL.dll || exit 1 
+    echo ""
+    #read -p "after gendef Press Enter to continue... or control-C if not happy"
+	echo "---"
+    echo ""
+    echo "cross_prefixdlltool = ${cross_prefix}dlltool -l libOpenCL.a -d OpenCL.def -k -A   runs next, it gets built within mingw, although you do have to search to find it"
+	${cross_prefix}dlltool -l libOpenCL.a -d OpenCL.def -k -A  || exit 1 
+    echo ""
+    #read -p "after dlltool Press Enter to continue... or control-C if not happy"

+    echo "---"
+    echo "Get the OpenCL 1.2 headers from Khronos ..."
+    if [[ ! -f opencl.h ]]; then
+       echo "Downloading https://raw.githubusercontent.com/KhronosGroup/OpenCL-Headers/opencl12/opencl.h for KHRONOS OpenCL v1.2 "
+       curl -4 -H 'Pragma: no-cache' -H 'Cache-Control: no-cache' -H 'Cache-Control: max-age=0' https://raw.githubusercontent.com/KhronosGroup/OpenCL-Headers/opencl12/opencl.h  -O --fail || exit 1
+       #read -p  "File opencl.h  downloaded ..."
+    fi
+    if [[ ! -f cl_platform.h ]]; then
+       echo "Downloading https://raw.githubusercontent.com/KhronosGroup/OpenCL-Headers/opencl12/cl_platform.h for KHRONOS OpenCL v1.2 "
+       curl -4 -H 'Pragma: no-cache' -H 'Cache-Control: no-cache' -H 'Cache-Control: max-age=0' https://raw.githubusercontent.com/KhronosGroup/OpenCL-Headers/opencl12/cl_platform.h  -O --fail || exit 1
+       #read -p  "File cl_platform.h  downloaded ..."
+    fi
+    if [[ ! -f cl.h ]]; then
+       echo "Downloading https://raw.githubusercontent.com/KhronosGroup/OpenCL-Headers/opencl12/cl.h for KHRONOS OpenCL v1.2 "
+       curl -4 -H 'Pragma: no-cache' -H 'Cache-Control: no-cache' -H 'Cache-Control: max-age=0' https://raw.githubusercontent.com/KhronosGroup/OpenCL-Headers/opencl12/cl.h  -O --fail || exit 1
+       #read -p  "File cl.h  downloaded ..."
+    fi
+    if [[ ! -f cl_ext.h ]]; then
+       echo "Downloading https://raw.githubusercontent.com/KhronosGroup/OpenCL-Headers/opencl12/cl_ext.h for KHRONOS OpenCL v1.2 "
+       curl -4 -H 'Pragma: no-cache' -H 'Cache-Control: no-cache' -H 'Cache-Control: max-age=0' https://raw.githubusercontent.com/KhronosGroup/OpenCL-Headers/opencl12/cl_ext.h  -O --fail || exit 1
+       #read -p  "File cl_ext.h  downloaded ..."
+    fi
+    if [[ ! -f cl_egl.h ]]; then
+       echo "Downloading https://raw.githubusercontent.com/KhronosGroup/OpenCL-Headers/opencl12/cl_egl.h for KHRONOS OpenCL v1.2 "
+       curl -4 -H 'Pragma: no-cache' -H 'Cache-Control: no-cache' -H 'Cache-Control: max-age=0' https://raw.githubusercontent.com/KhronosGroup/OpenCL-Headers/opencl12/cl_egl.h  -O --fail || exit 1
+       #read -p  "File cl_egl.h  downloaded ..."
+    fi
+    if [[ ! -f cl_dx9_media_sharing.h ]]; then
+       echo "Downloading https://raw.githubusercontent.com/KhronosGroup/OpenCL-Headers/opencl12/cl_dx9_media_sharing.h for KHRONOS OpenCL v1.2 "
+       curl -4 -H 'Pragma: no-cache' -H 'Cache-Control: no-cache' -H 'Cache-Control: max-age=0' https://raw.githubusercontent.com/KhronosGroup/OpenCL-Headers/opencl12/cl_dx9_media_sharing.h  -O --fail || exit 1
+       #read -p  "File cl_dx9_media_sharing.h  downloaded ..."
+    fi
+    if [[ ! -f cl_d3d10.h ]]; then
+       echo "Downloading https://raw.githubusercontent.com/KhronosGroup/OpenCL-Headers/opencl12/cl_d3d10.h for KHRONOS OpenCL v1.2 "
+       curl -4 -H 'Pragma: no-cache' -H 'Cache-Control: no-cache' -H 'Cache-Control: max-age=0' https://raw.githubusercontent.com/KhronosGroup/OpenCL-Headers/opencl12/cl_d3d10.h  -O --fail || exit 1
+       #read -p  "File cl_d3d10.h  downloaded ..."
+    fi
+    if [[ ! -f cl_d3d11.h ]]; then
+       echo "Downloading https://raw.githubusercontent.com/KhronosGroup/OpenCL-Headers/opencl12/cl_d3d11.h for KHRONOS OpenCL v1.2 "
+       curl -4 -H 'Pragma: no-cache' -H 'Cache-Control: no-cache' -H 'Cache-Control: max-age=0' https://raw.githubusercontent.com/KhronosGroup/OpenCL-Headers/opencl12/cl_d3d11.h  -O --fail || exit 1
+       #read -p  "File cl_d3d11.h  downloaded ..."
+    fi
+    if [[ ! -f cl_gl.h ]]; then
+       echo "Downloading https://raw.githubusercontent.com/KhronosGroup/OpenCL-Headers/opencl12/cl_gl.h for KHRONOS OpenCL v1.2 "
+       curl -4 -H 'Pragma: no-cache' -H 'Cache-Control: no-cache' -H 'Cache-Control: max-age=0' https://raw.githubusercontent.com/KhronosGroup/OpenCL-Headers/opencl12/cl_gl.h  -O --fail || exit 1
+       #read -p  "File cl_gl.h  downloaded ..."
+    fi
+    if [[ ! -f cl_gl_ext.h ]]; then
+       echo "Downloading https://raw.githubusercontent.com/KhronosGroup/OpenCL-Headers/opencl12/cl_gl_ext.h for KHRONOS OpenCL v1.2 "
+       curl -4 -H 'Pragma: no-cache' -H 'Cache-Control: no-cache' -H 'Cache-Control: max-age=0' https://raw.githubusercontent.com/KhronosGroup/OpenCL-Headers/opencl12/cl_gl_ext.h  -O --fail || exit 1
+       #read -p  "File cl_gl_ext.h  downloaded ..."
+    fi
+	echo "-------------------------------------------------------------"
+    #read -p "Press Enter to continue... or control-C if not happy"
+    pwd
+    ls -al
+	mkdir -v ${mingw_w64_x86_64_prefix}/include/OpenCL 
+	mkdir -v ${mingw_w64_x86_64_prefix}/include/CL
+    echo "---"
+	cp -fv *.h ${mingw_w64_x86_64_prefix}/include/OpenCL || exit 1 
+	cp -fv *.h ${mingw_w64_x86_64_prefix}/include/CL || exit 1 
+	cp -fv *.a ${mingw_w64_x86_64_prefix}/lib || exit 1 
+	echo "---"
+	cd ..
+	echo "Finished doing OpenCL stuff it for bits $oclbits"
+	#read -p "Finished doing OpenCL stuff it for bits $oclbits"
+}




