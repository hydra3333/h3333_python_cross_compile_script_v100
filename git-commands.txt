hydra3333@gmail.com
0g0

# a list of some git commands I need to use

#mkdir -v -m a=rwx mydir
#rmdir -v --ignore-fail-on-non-empty 
# rm -f -R -v folder
#cp -f -v from to
#rm -f -v file
#


remote: Please see https://docs.github.com/en/get-started/getting-started-with-git/about-remote-repositories#cloning-with-https-urls for information on currently recommended modes of authentication.
fatal: Authentication failed for 'https://github.com/hydra3333/h3333_python_cross_compile_script_v100_v100.git/'


echo ensure we are in folder git first !!
read -p "ensure we are in folder git first !!  press enter to continue"


# to ensure a fresh copy, to delete all tags and releases
sudo apt -y install git gh
cd ~/Desktop
rm -f -R -v h3333_python_cross_compile_script_v100
git clone https://github.com/hydra3333/h3333_python_cross_compile_script_v100.git
cd h3333_python_cross_compile_script_v100
git config --global user.name "hydra3333"
git config --global user.email "hydra3333@gmail.com"
git config --global credential.helper store
#git config --global credential.helper 'store [options]'
#git config --global credential.helper 'cache --timeout 3600000'
#gh auth login
## now use up/down arrows to choose options then past the authentication token
#---
## to delete all tags/releases
## https://dev.to/dakdevs/delete-all-releases-from-github-repo-13ad
git fetch
##git tag -l | xargs -n 1 git push --delete origin
git tag -l | xargs -n 1 git tag --delete --force origin




#---
cd ~/Desktop
rm -f -R -v h3333_python_cross_compile_script_v100
git clone https://github.com/hydra3333/h3333_python_cross_compile_script_v100.git
cd h3333_python_cross_compile_script_v100
## to list all releases
gh release list -L 999
## to list all tags
git tag -l 




remote: Support for password authentication was removed on August 13, 2021.

# to ensure a fresh copy
cd ~/Desktop
rm -f -R -v h3333_python_cross_compile_script_v100
git clone https://github.com/hydra3333/h3333_python_cross_compile_script_v100.git
cd h3333_python_cross_compile_script_v100
git config --global user.name "hydra3333"
git config --global user.email "hydra3333@gmail.com"
git config --global credential.helper store
#git config --global credential.helper 'store [options]'
#git config --global credential.helper 'cache --timeout 3600000'

cd ~/Desktop/h3333_python_cross_compile_script_v100
mkdir _disabled
git mv --force --verbose cross_compiler_v100_001.py _disabled/
git mv --force --verbose h3333_v100.001.sh _disabled/
git mv --force --verbose h3333_v100.001*.sh _disabled/
cd mingw_toolchain_script
mkdir _disabled
git mv --force --verbose mingw_toolchain_script_v100_001.py _disabled/
git mv --force --verbose zeranoe-mingw-w64-build.sh _disabled/
cd ~/Desktop/h3333_python_cross_compile_script_v100
cd packages/dependencies
git mv --force --verbose *MABS* _disabled/
git mv --force --verbose *.not_in_use _disabled/
cd ~/Desktop/h3333_python_cross_compile_script_v100
git add --verbose --force --all --renormalize * 
git status
git commit --verbose --branch --message="supersede 001 files with 002 files by moving to _disabled folder"
git push # upload the changes



git status # to see what's tracked and what's changed etc
git mv --force --verbose fromfilename tofilename
git rm filename
git add * # get git to recognised new and deleted files and changes
git commit # to commit the changes on the local disk
git status # to see what's traceked and what's changed etc
git branch
git branch -a
git push # upload the changes
###git pull-request



to make a local branch and then a pull request -

git clone https://github.com/hydra3333/h3333_python_cross_compile_script_v100_v100.git
cd h3333_python_cross_compile_script_v100
#git pull origin master
git pull origin main
git git checkout -b SDL2_update # create a branch 
git branch
... do modifications etc
git commit --all -m "made some change to SDL2"
git tag archive/SDL2_update SDL2_update
git branch
git branch -a
git push origin SDL2_update
git request-pull [-p] <start> <url>



To remove all history :-

https://gist.github.com/heiswayi/350e2afda8cece810c0f6116dadbe651
https://gist.github.com/stephenhardy/5470814

note: 
Deleting the .git folder may cause problems in your git repository. 
If you want to delete all your commit history but keep the code in its current state, it is very safe to do it as in the following:

# download a backup zip first !!!!
# ensure a totally fresh copy
cd ~/Desktop
rm -f -R -v h3333_python_cross_compile_script_v100
git clone https://github.com/hydra3333/h3333_python_cross_compile_script_v100.git
cd h3333_python_cross_compile_script_v100
git config --global user.name "hydra3333"
git config --global user.email "hydra3333@gmail.com"
git config --global credential.helper store
# Checkout to a branch named latest_branch which has no history
git checkout --orphan latest_branch
# Add all the files
git add --verbose --force --all --renormalize * 
# Commit the changes
git commit --verbose --branch --message="committing an orphan branch"
# Delete the master branch
git branch --verbose --delete --force master
#git branch --verbose --delete --force main
# Rename the branch latest_branch to master
git branch --verbose --move --force master
#git branch --verbose --move --force main
# Finally, force update your repository
#git push -f origin master  # Force push master branch to github
#git push -f origin main  # Force push main branch to github
# remove the old files (loose objects)
git gc --aggressive --prune=all
git commit --verbose --branch --message="committing git-gc"