--- a/loader/vk_loader_platform.h	2022-07-08 17:16:03.760835000 -0700
+++ b/loader/vk_loader_platform.h	2022-07-08 17:26:41.694433000 -0700
@@ -201,15 +201,16 @@
 
 // The once init functionality is not used when building a DLL on Windows. This is because there is no way to clean up the
 // resources allocated by anything allocated by once init. This isn't a problem for static libraries, but it is for dynamic
 // ones. When building a DLL, we use DllMain() instead to allow properly cleaning up resources.
 
-#if defined(__APPLE__) && defined(BUILD_STATIC_LOADER)
+##if defined(__APPLE__) && defined(BUILD_STATIC_LOADER)
+#if defined(BUILD_STATIC_LOADER)
 static inline void loader_platform_thread_once_fn(pthread_once_t *ctl, void (*func)(void)) {
     assert(func != NULL);
     assert(ctl != NULL);
-    pthread_once(ctl, func);
+    pthread_once(ctl, func); // use pthrreads instead of MABS static BOOL CALLBACK InitFuncWrapper(PINIT_ONCE InitOnce, PVOID Parameter, PVOID *Context)
 }
 #define LOADER_PLATFORM_THREAD_ONCE_DECLARATION(var) pthread_once_t var = PTHREAD_ONCE_INIT;
 #define LOADER_PLATFORM_THREAD_ONCE_EXTERN_DEFINITION(var) extern pthread_once_t var;
 #define LOADER_PLATFORM_THREAD_ONCE(ctl, func) loader_platform_thread_once_fn(ctl, func);
 #else
