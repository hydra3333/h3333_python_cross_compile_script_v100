--- a/loader/CMakeLists.txt	2020-04-07 15:43:30.000000000 +0930
+++ b/loader/CMakeLists.txt	2020-04-07 15:43:52.000000000 +0930
@@ -61,7 +61,8 @@
 set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -DDEBUG")
 set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -DDEBUG")
 
-if(WIN32)
+#if(WIN32)
+if(MSVC)
     # Use static MSVCRT libraries
     foreach(configuration
             in
@@ -128,7 +129,8 @@
 set(ASM_FAILURE_MSG "${ASM_FAILURE_MSG}Note that this may be unsafe, as the C code requires tail-call optimizations to remove")
 set(ASM_FAILURE_MSG "${ASM_FAILURE_MSG} the stack frame for certain calls. If the compiler does not do this, then unknown device")
 set(ASM_FAILURE_MSG "${ASM_FAILURE_MSG} extensions will suffer from a corrupted stack.")
-if(WIN32)
+#if(WIN32)
+if(MSVC)
     enable_language(ASM_MASM)
     if(CMAKE_ASM_MASM_COMPILER_WORKS)
         if(NOT CMAKE_CL_64)
@@ -177,7 +179,8 @@
     endif()
 endif()
 
-if(WIN32)
+#if(WIN32)
+if(MSVC)
     add_library(loader-norm OBJECT ${NORMAL_LOADER_SRCS} dirent_on_windows.c dxgi_loader.c)
     target_compile_options(loader-norm PUBLIC "$<$<CONFIG:DEBUG>:${LOCAL_C_FLAGS_DBG}>")
     target_compile_options(loader-norm PUBLIC ${MSVC_LOADER_COMPILE_OPTIONS})
@@ -223,17 +226,24 @@
     endif()
 
     if(APPLE AND BUILD_STATIC_LOADER)
-        add_library(vulkan STATIC ${NORMAL_LOADER_SRCS} ${OPT_LOADER_SRCS})
+#        add_library(vulkan STATIC ${NORMAL_LOADER_SRCS} ${OPT_LOADER_SRCS})
+        add_library(vulkan STATIC ${NORMAL_LOADER_SRCS} ${OPT_LOADER_SRCS} dxgi_loader.c)
     else()
-        add_library(vulkan SHARED ${NORMAL_LOADER_SRCS} ${OPT_LOADER_SRCS})
+#        add_library(vulkan SHARED ${NORMAL_LOADER_SRCS} ${OPT_LOADER_SRCS})
+        add_library(vulkan SHARED ${NORMAL_LOADER_SRCS} ${OPT_LOADER_SRCS} dxgi_loader.c)
     endif()
     add_dependencies(vulkan loader_asm_gen_files)
     set_target_properties(vulkan
-                          PROPERTIES SOVERSION
-                                     "1"
-                                     VERSION
-                                     "${VulkanHeaders_VERSION_MAJOR}.${VulkanHeaders_VERSION_MINOR}.${VulkanHeaders_VERSION_PATCH}")
-    target_link_libraries(vulkan ${CMAKE_DL_LIBS} pthread m)
+#                          PROPERTIES SOVERSION
+#                                     "1"
+#                                     VERSION
+#                                     "${VulkanHeaders_VERSION_MAJOR}.${VulkanHeaders_VERSION_MINOR}.${VulkanHeaders_VERSION_PATCH}")
+                         PROPERTIES SOVERSION
+                                    "1"
+                                    VERSION
+                                    "${VulkanHeaders_VERSION_MAJOR}.${VulkanHeaders_VERSION_MINOR}.${VulkanHeaders_VERSION_PATCH}" PREFIX "" OUTPUT_NAME vulkan-1)
+#    target_link_libraries(vulkan ${CMAKE_DL_LIBS} pthread m)
+    target_link_libraries(vulkan ${CMAKE_DL_LIBS} pthread m cfgmgr32)
     target_link_libraries(vulkan Vulkan::Headers)
 
     if(APPLE)
@@ -294,9 +304,10 @@
         include(FindPkgConfig QUIET)
         if(PKG_CONFIG_FOUND)
             set(VK_API_VERSION "${VulkanHeaders_VERSION_MAJOR}.${VulkanHeaders_VERSION_MINOR}.${VulkanHeaders_VERSION_PATCH}")
-            foreach(LIB ${CMAKE_CXX_IMPLICIT_LINK_LIBRARIES} ${PLATFORM_LIBS})
-                set(PRIVATE_LIBS "${PRIVATE_LIBS} -l${LIB}")
-            endforeach()
+#            foreach(LIB ${CMAKE_CXX_IMPLICIT_LINK_LIBRARIES} ${PLATFORM_LIBS})
+#                set(PRIVATE_LIBS "${PRIVATE_LIBS} -l${LIB}")
+#            endforeach()
+			set(PRIVATE_LIBS "${PRIVATE_LIBS} -lcfgmgr32 -lpthread -lm -lshlwapi")
             configure_file("vulkan.pc.in" "vulkan.pc" @ONLY)
             install(FILES "${CMAKE_CURRENT_BINARY_DIR}/vulkan.pc" DESTINATION "${CMAKE_INSTALL_LIBDIR}/pkgconfig")
         endif()
